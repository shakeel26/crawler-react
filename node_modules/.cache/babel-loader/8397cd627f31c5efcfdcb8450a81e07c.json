{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shakeel/Projects/crawler-react/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\n\nfunction App() {\n  _s();\n\n  const [getAllCourses, setGetAllCourses] = useState([]);\n  const [degreeName, setDegreeName] = useState(\"\");\n  const [oneCourse, setOneCourse] = useState([]);\n  axios.get('http://localhost:8081/getAllCourses').then(res => {\n    setGetAllCourses(res.data);\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [getAllCourses.map((eachCourse, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"deptName-\" + index,\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: eachCourse.deptName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 81\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\" + degreeName,\n          name: eachCourse.crawledCourses.degreeName,\n          onClick: e => {\n            console.log('cliked'); //                        e.preventDefault();\n\n            setDegreeName(eachCourse.crawledCourses.degreeName.replace(/ /g, ''));\n          },\n          children: [\" \", eachCourse.crawledCourses.degreeName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"degreeType-\" + index,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: eachCourse.degreeType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"language-\" + index,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: eachCourse.crawledCourses.language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"uniName-\" + index,\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: eachCourse.crawledCourses.website,\n            target: \"_blank\",\n            children: eachCourse.crawledCourses.uniName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 108\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 59\n      }, this)), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:degreeName\",\n          children: /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Rgx9X0m2SLS3JJzEP312O14uLjM=\");\n\n_c = App;\n\nfunction Child() {\n  _s2();\n\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let {\n    degreeName\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"ID: \", degreeName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Child, \"m1sQULfj06Mgydyu1P5yW0WqT80=\", false, function () {\n  return [useParams];\n});\n\n_c2 = Child;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Child\");","map":{"version":3,"sources":["/home/shakeel/Projects/crawler-react/src/App.js"],"names":["React","useState","axios","BrowserRouter","Router","Switch","Route","Link","useParams","App","getAllCourses","setGetAllCourses","degreeName","setDegreeName","oneCourse","setOneCourse","get","then","res","data","map","eachCourse","index","deptName","crawledCourses","e","console","log","replace","degreeType","language","website","uniName","Child"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport {BrowserRouter as Router, Switch, Route, Link, useParams} from \"react-router-dom\";\n\nfunction App() {\n    const [getAllCourses, setGetAllCourses] = useState([]);\n    const [degreeName, setDegreeName] = useState(\"\");\n    const [oneCourse, setOneCourse] = useState([]);\n\n    axios.get('http://localhost:8081/getAllCourses')\n        .then(res => {\n            setGetAllCourses(res.data)\n        });\n\n    return (\n        <Router>\n            <div>\n                {getAllCourses.map((eachCourse, index) => <div key={index}>\n                    <div id={\"deptName-\" + index}><h5>{eachCourse.deptName}</h5><span></span></div>\n{/*                    <div id={\"degreeName-\" + index} name={eachCourse.crawledCourses.degreeName} onClick={(e) => {*/}\n{/*                        //  e.preventDefault();*/}\n{/*//                        setDegreeName(e.getAttribute('name').replace(/ /g, ''));*/}\n{/*                        setDegreeName(e.target.getAttribute('name').replace(/ /g, ''));*/}\n{/*                        setOneCourse(eachCourse);*/}\n{/*                    }}> {eachCourse.crawledCourses.degreeName} </div>*/}\n\n                    <Link to={\"/\"+ degreeName} name={eachCourse.crawledCourses.degreeName} onClick={(e) =>{\n                        console.log('cliked')\n//                        e.preventDefault();\n                        setDegreeName(eachCourse.crawledCourses.degreeName.replace(/ /g, ''));\n                    }}> {eachCourse.crawledCourses.degreeName} </Link>\n                    <div id={\"degreeType-\" + index}><span>{eachCourse.degreeType}</span></div>\n                    <div id={\"language-\" + index}><span>{eachCourse.crawledCourses.language}</span></div>\n                    <div id={\"uniName-\" + index}><a href={eachCourse.crawledCourses.website}\n                                                    target=\"_blank\">{eachCourse.crawledCourses.uniName}</a><span></span>\n                    </div>\n                </div>)}\n                <Switch>\n                    <Route path=\"/:degreeName\" children={<Child />} />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\nfunction Child() {\n    // We can use the `useParams` hook here to access\n    // the dynamic pieces of the URL.\n    let { degreeName } = useParams();\n    return (\n        <div>\n            <h3>ID: {degreeName}</h3>\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}